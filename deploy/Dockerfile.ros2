# Multi-stage Dockerfile for ROS 2 components
FROM ros:humble-base as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-vcstool \
    curl \
    wget \
    git \
    build-essential \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt /tmp/
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

# Install additional ROS 2 packages
RUN apt-get update && apt-get install -y \
    ros-humble-geometry-msgs \
    ros-humble-sensor-msgs \
    ros-humble-std-msgs \
    ros-humble-nav-msgs \
    ros-humble-tf2 \
    ros-humble-tf2-ros \
    ros-humble-tf2-geometry-msgs \
    && rm -rf /var/lib/apt/lists/*

# Set up workspace
WORKDIR /opt/ros2_ws

# Copy source code
COPY src/ src/

# Initialize rosdep
RUN rosdep init && rosdep update

# Install dependencies
RUN rosdep install --from-paths src --ignore-src -r -y

# Build workspace
RUN . /opt/ros/humble/setup.sh && \
    colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

# Create runtime stage
FROM ros:humble-base as runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    python3-pip \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python runtime dependencies
COPY requirements.txt /tmp/
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

# Install ROS 2 runtime packages
RUN apt-get update && apt-get install -y \
    ros-humble-geometry-msgs \
    ros-humble-sensor-msgs \
    ros-humble-std-msgs \
    ros-humble-nav-msgs \
    ros-humble-tf2 \
    ros-humble-tf2-ros \
    ros-humble-tf2-geometry-msgs \
    && rm -rf /var/lib/apt/lists/*

# Copy built workspace from base stage
COPY --from=base /opt/ros2_ws /opt/ros2_ws

# Set up environment
WORKDIR /opt/ros2_ws
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN echo "source /opt/ros2_ws/install/setup.bash" >> ~/.bashrc

# Create non-root user for security
RUN useradd -m -u 1000 -s /bin/bash swarm && \
    chown -R swarm:swarm /opt/ros2_ws

USER swarm

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD . /opt/ros/humble/setup.sh && . /opt/ros2_ws/install/setup.sh && ros2 node list

# Default command
CMD ["/bin/bash", "-c", "source /opt/ros/humble/setup.bash && source install/setup.bash && ros2 run xr_swarm_core swarm_coordinator"]